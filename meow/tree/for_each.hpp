////////////////////////////////////////////////////////////////////////////////////////////////
// vim: set filetype=cpp autoindent noexpandtab tabstop=4 shiftwidth=4 foldmethod=marker :
// (c) 2010 Anton Povarov <anton.povarov@gmail.com>
////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef MEOW_TREE__FOR_EACH_HPP_
#define MEOW_TREE__FOR_EACH_HPP_

#include "tree.hpp"

////////////////////////////////////////////////////////////////////////////////////////////////
namespace meow { namespace tree {
////////////////////////////////////////////////////////////////////////////////////////////////

	template<class Function>
	void for_each_file(node_t *root, Function const& function)
	{
		if (node_type::directory == root->type())
		{
			directory_t *dir = as_directory(root);

			typedef directory_t::child_range_t range_t;

			range_t const r = dir->get_children();
			for (range_t::const_iterator i = r.begin(); i != r.end(); ++i)
			{
				node_t *child = (*i).ptr;
				for_each_file(child, function);
			}
		}
		else
		{
			function(as_file(root));
		}
	}

////////////////////////////////////////////////////////////////////////////////////////////////
}} // namespace meow { namespace tree {
////////////////////////////////////////////////////////////////////////////////////////////////

#endif // MEOW_TREE__FOR_EACH_HPP_


